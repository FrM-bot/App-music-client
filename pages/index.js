import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import { useRef, useState, useEffect } from 'react'

import SvgOptios from 'svg/options'

import MusicPlayer from 'components/player'

import { GET_MUSICS } from 'services/getMusics'

import { ButtonOptions } from 'components/pagesComponents/buttonOptions'

export default function Home({ musicsName }) {
  // const musicsName = await fs.readdir('./public/musics')
  const [musics, setMusics] = useState([])
  const [musicToPlay, setMusicToPlay] = useState()
  const [musicsGroupBy, setMusicsGroupBy] = useState([])
  useEffect(() => {
    const group = {}
    musicsName.forEach((name) => {
      group[name[0]] = group[name[0]] ? group[name[0]].concat(name) : ([name])
    })
    setMusicsGroupBy(group)
  }, [])
  if (!musics) {
    return <div>loading</div>
  }
  const setMusicHandler = (musicHandler) => {
    // musicToPlay?.music.pause()
    setMusicToPlay(musicHandler)
    // music.music.play()
  }

  console.log({ musicToPlay }, 'on index')
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='container musics'>


        {
          Object.entries(musicsGroupBy).map(([key, musics]) => (
            <div
              key={key}
            >
              <div className='sticky my-1'>

                <span className='card p-1'>{key}</span>
              </div>

              {
                musics.map(name => (
                  <div
                    className='card--container'
                    key={name}>
                    <div
                      className={name === musicToPlay ? 'card card--musics card--playing flex align-center' : 'card card--musics card--hover flex align-center'}
                      
                    >
                      <span
                        onClick={() => setMusicHandler(name)}
                        className='p-1'
                      >
                        {name.replace('.mp3', '')}
                      </span>
                        <ButtonOptions nameMusic={name}/>
                    </div>
                  </div>
                ))
              }

            </div>
          ))
        }

        {
          musicToPlay &&
          <MusicPlayer musicName={musicToPlay} allMusics={musicsName} setMusicHandler={setMusicHandler} />
        }
      </main>
    </div>
  )
}

export async function getStaticProps(contetx) {
  const musicsName = await GET_MUSICS()
  return {
    props: {
      musicsName
    }
  }
}